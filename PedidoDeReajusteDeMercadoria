pragma solidity 0.5.12;

contract SolicitacaoReajusteDePreco
{
    string public status = "Negado";
    uint256 public valor_solicitado_mercadoria;
    uint256 public valor_da_mercadoria = 2 ;
    uint256 public data_vigencia;
    uint256 data_do_pedido_reajuste;
    uint256 data_entrega_material;
    
    
    uint8 constant requisito_data = 0;
    uint8 constant requisito_preco = 1;
    
    constructor( uint256 ano_mes_dia_pedido_reajuste, uint256 ano_mes_dia_entrega_material, uint256 novo_preco ) public
    {
        require( ano_mes_dia_entrega_material > ano_mes_dia_pedido_reajuste, "Pedido não pode ser menor que data de reajuste");

        valor_solicitado_mercadoria = novo_preco;
        data_do_pedido_reajuste = ano_mes_dia_pedido_reajuste;
        data_entrega_material = ano_mes_dia_entrega_material;
    }
    
    //
    
    function AvaliarRequisitos(uint8 tem_instrucao, uint8 tem_solicitacao ) public
    {
        require( tem_solicitacao == 1, "Não tem solicitação");
        require( tem_instrucao >= 0 && tem_instrucao <= 1 , "Não tem solicitação");
        
        uint8[] memory requisitos = new uint8[](2);
        
        // definicao das regras
        
        if ( (data_entrega_material - data_do_pedido_reajuste ) < 30 )
        {
            if (tem_instrucao == 0 )
            {
                requisitos[requisito_data] = 0;
            }
            else
            {
                requisitos[requisito_data] = 1;
            }
        }
        else
        {
            requisitos[requisito_data] = 1;
        }
        
        // limite do valor negociado
        
        if ( valor_solicitado_mercadoria <= 5 )
        {
           requisitos[requisito_preco] = 1;    
        }
        else
        {
            requisitos[requisito_preco] = 0;
        }
        
        uint8 resultado_dos_requisitos = 1;
        
        // calculo dos resultatos, sendo igual a 1 esta Aprovado
        
        for (uint8 i = 0; i < 2; i++ )
        {
            resultado_dos_requisitos = resultado_dos_requisitos * requisitos[i];
        }
        
        if (resultado_dos_requisitos == 1)
        {
            status = "Aprovado";
            
            valor_da_mercadoria = valor_solicitado_mercadoria;
            data_vigencia = data_entrega_material;
        }
        else
        {
            status = "Negado";
        }
        
    }

}
